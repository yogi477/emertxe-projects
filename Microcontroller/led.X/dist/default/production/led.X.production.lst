

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sat Dec 21 21:19:35 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16   000000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4580 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000FE0                     bsr             equ	4064
    52   000FE9                     fsr0            equ	4073
    53   000FEA                     fsr0h           equ	4074
    54   000FE9                     fsr0l           equ	4073
    55   000FE1                     fsr1            equ	4065
    56   000FE2                     fsr1h           equ	4066
    57   000FE1                     fsr1l           equ	4065
    58   000FD9                     fsr2            equ	4057
    59   000FDA                     fsr2h           equ	4058
    60   000FD9                     fsr2l           equ	4057
    61   000FEF                     indf0           equ	4079
    62   000FE7                     indf1           equ	4071
    63   000FDF                     indf2           equ	4063
    64   000FF2                     intcon          equ	4082
    65   000000                     nvmcon          equ	0
    66   000FF9                     pcl             equ	4089
    67   000FFA                     pclath          equ	4090
    68   000FFB                     pclatu          equ	4091
    69   000FEB                     plusw0          equ	4075
    70   000FE3                     plusw1          equ	4067
    71   000FDB                     plusw2          equ	4059
    72   000FED                     postdec0        equ	4077
    73   000FE5                     postdec1        equ	4069
    74   000FDD                     postdec2        equ	4061
    75   000FEE                     postinc0        equ	4078
    76   000FE6                     postinc1        equ	4070
    77   000FDE                     postinc2        equ	4062
    78   000FEC                     preinc0         equ	4076
    79   000FE4                     preinc1         equ	4068
    80   000FDC                     preinc2         equ	4060
    81   000FF3                     prod            equ	4083
    82   000FF4                     prodh           equ	4084
    83   000FF3                     prodl           equ	4083
    84   000FD8                     status          equ	4056
    85   000FF5                     tablat          equ	4085
    86   000FF6                     tblptr          equ	4086
    87   000FF7                     tblptrh         equ	4087
    88   000FF6                     tblptrl         equ	4086
    89   000FF8                     tblptru         equ	4088
    90   000FFD                     tosl            equ	4093
    91   000FE8                     wreg            equ	4072
    92   000000                     
    93                           	psect	idataCOMRAM
    94   000730                     __pidataCOMRAM:
    95                           	callstack 0
    96                           
    97                           ;initializer for _trisb
    98   000730  93                 	db	147
    99   000731  0F                 	db	15
   100                           
   101                           ;initializer for _portb
   102   000732  81                 	db	129
   103   000733  0F                 	db	15
   104                           
   105                           ; #config settings
   106                           
   107                           	psect	cinit
   108   00070A                     __pcinit:
   109                           	callstack 0
   110   00070A                     start_initialization:
   111                           	callstack 0
   112   00070A                     __initialization:
   113                           	callstack 0
   114                           
   115                           ; Initialize objects allocated to COMRAM (4 bytes)
   116                           ; load TBLPTR registers with __pidataCOMRAM
   117   00070A  0E30               	movlw	low __pidataCOMRAM
   118   00070C  6EF6               	movwf	tblptrl,c
   119   00070E  0E07               	movlw	high __pidataCOMRAM
   120   000710  6EF7               	movwf	tblptrh,c
   121   000712  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   122   000714  6EF8               	movwf	tblptru,c
   123   000716  EE00  F00F         	lfsr	0,__pdataCOMRAM
   124   00071A  EE10 F004          	lfsr	1,4
   125   00071E                     copy_data0:
   126   00071E  0009               	tblrd		*+
   127   000720  CFF5 FFEE          	movff	tablat,postinc0
   128   000724  50E5               	movf	postdec1,w,c
   129   000726  50E1               	movf	fsr1l,w,c
   130   000728  E1FA               	bnz	copy_data0
   131   00072A                     end_of_initialization:
   132                           	callstack 0
   133   00072A                     __end_of__initialization:
   134                           	callstack 0
   135   00072A  0100               	movlb	0
   136   00072C  EF01  F003         	goto	_main	;jump to C main() function
   137                           
   138                           	psect	dataCOMRAM
   139   00000F                     __pdataCOMRAM:
   140                           	callstack 0
   141   00000F                     _trisb:
   142                           	callstack 0
   143   00000F                     	ds	2
   144   000011                     _portb:
   145                           	callstack 0
   146   000011                     	ds	2
   147                           
   148                           	psect	cstackCOMRAM
   149   000001                     __pcstackCOMRAM:
   150                           	callstack 0
   151   000001                     ??_main:
   152                           
   153                           ; 1 bytes @ 0x0
   154   000001                     	ds	2
   155   000003                     main@wait:
   156                           	callstack 0
   157                           
   158                           ; 4 bytes @ 0x2
   159   000003                     	ds	4
   160   000007                     main@wait_37:
   161                           	callstack 0
   162                           
   163                           ; 4 bytes @ 0x6
   164   000007                     	ds	4
   165   00000B                     main@i:
   166                           	callstack 0
   167                           
   168                           ; 2 bytes @ 0xA
   169   00000B                     	ds	2
   170   00000D                     main@i_36:
   171                           	callstack 0
   172                           
   173                           ; 2 bytes @ 0xC
   174   00000D                     	ds	2
   175                           
   176 ;;
   177 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   178 ;;
   179 ;; *************** function _main *****************
   180 ;; Defined at:
   181 ;;		line 6 in file "ledmain.c"
   182 ;; Parameters:    Size  Location     Type
   183 ;;		None
   184 ;; Auto vars:     Size  Location     Type
   185 ;;  wait            4    6[COMRAM] unsigned long 
   186 ;;  wait            4    2[COMRAM] unsigned long 
   187 ;;  i               2   12[COMRAM] int 
   188 ;;  i               2   10[COMRAM] int 
   189 ;; Return value:  Size  Location     Type
   190 ;;                  1    wreg      void 
   191 ;; Registers used:
   192 ;;		wreg, status,2, status,0, cstack
   193 ;; Tracked objects:
   194 ;;		On entry : 0/0
   195 ;;		On exit  : 0/0
   196 ;;		Unchanged: 0/0
   197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   198 ;;      Params:         0       0       0       0       0       0       0
   199 ;;      Locals:        12       0       0       0       0       0       0
   200 ;;      Temps:          2       0       0       0       0       0       0
   201 ;;      Totals:        14       0       0       0       0       0       0
   202 ;;Total ram usage:       14 bytes
   203 ;; Hardware stack levels required when called: 1
   204 ;; This function calls:
   205 ;;		_intt_config
   206 ;; This function is called by:
   207 ;;		Startup code after reset
   208 ;; This function uses a non-reentrant model
   209 ;;
   210                           
   211                           	psect	text0
   212   000602                     __ptext0:
   213                           	callstack 0
   214   000602                     _main:
   215                           	callstack 30
   216   000602                     
   217                           ;ledmain.c: 8:     intt_config();
   218   000602  EC9A  F003         	call	_intt_config	;wreg free
   219   000606                     
   220                           ;ledmain.c: 9:     *portb = 0x00;
   221   000606  6A81               	clrf	129,c
   222   000608                     l707:
   223                           
   224                           ;ledmain.c: 11:     {;ledmain.c: 12:         for(int i=0;i<8;i++)
   225   000608  0E00               	movlw	0
   226   00060A  6E0C               	movwf	(main@i+1)^0,c
   227   00060C  0E00               	movlw	0
   228   00060E  6E0B               	movwf	main@i^0,c
   229   000610                     l713:
   230                           
   231                           ;ledmain.c: 13:         {;ledmain.c: 14:             for(unsigned long wait=100000;wait-
      +                          -;);
   232   000610  0EA0               	movlw	160
   233   000612  6E03               	movwf	main@wait^0,c
   234   000614  0E86               	movlw	134
   235   000616  6E04               	movwf	(main@wait+1)^0,c
   236   000618  0E01               	movlw	1
   237   00061A  6E05               	movwf	(main@wait+2)^0,c
   238   00061C  0E00               	movlw	0
   239   00061E  6E06               	movwf	(main@wait+3)^0,c
   240   000620                     l715:
   241   000620  0603               	decf	main@wait^0,f,c
   242   000622  0E00               	movlw	0
   243   000624  5A04               	subwfb	(main@wait+1)^0,f,c
   244   000626  5A05               	subwfb	(main@wait+2)^0,f,c
   245   000628  5A06               	subwfb	(main@wait+3)^0,f,c
   246   00062A  2803               	incf	main@wait^0,w,c
   247   00062C  E10A               	bnz	u11
   248   00062E  2804               	incf	(main@wait+1)^0,w,c
   249   000630  E108               	bnz	u11
   250   000632  2805               	incf	(main@wait+2)^0,w,c
   251   000634  E106               	bnz	u11
   252   000636  2806               	incf	(main@wait+3)^0,w,c
   253   000638  A4D8               	btfss	status,2,c
   254   00063A  EF21  F003         	goto	u11
   255   00063E  EF23  F003         	goto	u10
   256   000642                     u11:
   257   000642  EF10  F003         	goto	l715
   258   000646                     u10:
   259   000646                     
   260                           ;ledmain.c: 15:             *portb = *portb | (1<<i);
   261   000646  C00B  F001         	movff	main@i,??_main
   262   00064A  0E01               	movlw	1
   263   00064C  6E02               	movwf	(??_main+1)^0,c
   264   00064E  2A01               	incf	??_main^0,f,c
   265   000650  EF2C  F003         	goto	u24
   266   000654                     u25:
   267   000654  90D8               	bcf	status,0,c
   268   000656  3602               	rlcf	(??_main+1)^0,f,c
   269   000658                     u24:
   270   000658  2E01               	decfsz	??_main^0,f,c
   271   00065A  EF2A  F003         	goto	u25
   272   00065E  5002               	movf	(??_main+1)^0,w,c
   273   000660  1081               	iorwf	129,w,c
   274   000662  6E81               	movwf	129,c
   275   000664                     
   276                           ;ledmain.c: 17:         }
   277   000664  4A0B               	infsnz	main@i^0,f,c
   278   000666  2A0C               	incf	(main@i+1)^0,f,c
   279   000668  BE0C               	btfsc	(main@i+1)^0,7,c
   280   00066A  EF40  F003         	goto	u31
   281   00066E  500C               	movf	(main@i+1)^0,w,c
   282   000670  E109               	bnz	u30
   283   000672  0E08               	movlw	8
   284   000674  5C0B               	subwf	main@i^0,w,c
   285   000676  A0D8               	btfss	status,0,c
   286   000678  EF40  F003         	goto	u31
   287   00067C  EF42  F003         	goto	u30
   288   000680                     u31:
   289   000680  EF08  F003         	goto	l713
   290   000684                     u30:
   291   000684                     
   292                           ;ledmain.c: 18:         for(int i=0;i<8;i++)
   293   000684  0E00               	movlw	0
   294   000686  6E0E               	movwf	(main@i_36+1)^0,c
   295   000688  0E00               	movlw	0
   296   00068A  6E0D               	movwf	main@i_36^0,c
   297   00068C                     l729:
   298                           
   299                           ;ledmain.c: 19:         {;ledmain.c: 20:             for(unsigned long wait=100000;wait-
      +                          -;);
   300   00068C  0EA0               	movlw	160
   301   00068E  6E07               	movwf	main@wait_37^0,c
   302   000690  0E86               	movlw	134
   303   000692  6E08               	movwf	(main@wait_37+1)^0,c
   304   000694  0E01               	movlw	1
   305   000696  6E09               	movwf	(main@wait_37+2)^0,c
   306   000698  0E00               	movlw	0
   307   00069A  6E0A               	movwf	(main@wait_37+3)^0,c
   308   00069C                     l731:
   309   00069C  0607               	decf	main@wait_37^0,f,c
   310   00069E  0E00               	movlw	0
   311   0006A0  5A08               	subwfb	(main@wait_37+1)^0,f,c
   312   0006A2  5A09               	subwfb	(main@wait_37+2)^0,f,c
   313   0006A4  5A0A               	subwfb	(main@wait_37+3)^0,f,c
   314   0006A6  2807               	incf	main@wait_37^0,w,c
   315   0006A8  E10A               	bnz	u41
   316   0006AA  2808               	incf	(main@wait_37+1)^0,w,c
   317   0006AC  E108               	bnz	u41
   318   0006AE  2809               	incf	(main@wait_37+2)^0,w,c
   319   0006B0  E106               	bnz	u41
   320   0006B2  280A               	incf	(main@wait_37+3)^0,w,c
   321   0006B4  A4D8               	btfss	status,2,c
   322   0006B6  EF5F  F003         	goto	u41
   323   0006BA  EF61  F003         	goto	u40
   324   0006BE                     u41:
   325   0006BE  EF4E  F003         	goto	l731
   326   0006C2                     u40:
   327   0006C2                     
   328                           ;ledmain.c: 21:             *portb = *portb & ~(1<<i);
   329   0006C2  C00D  F001         	movff	main@i_36,??_main
   330   0006C6  0E01               	movlw	1
   331   0006C8  6E02               	movwf	(??_main+1)^0,c
   332   0006CA  2A01               	incf	??_main^0,f,c
   333   0006CC  EF6A  F003         	goto	u54
   334   0006D0                     u55:
   335   0006D0  90D8               	bcf	status,0,c
   336   0006D2  3602               	rlcf	(??_main+1)^0,f,c
   337   0006D4                     u54:
   338   0006D4  2E01               	decfsz	??_main^0,f,c
   339   0006D6  EF68  F003         	goto	u55
   340   0006DA  5002               	movf	(??_main+1)^0,w,c
   341   0006DC  0AFF               	xorlw	255
   342   0006DE  1481               	andwf	129,w,c
   343   0006E0  6E81               	movwf	129,c
   344   0006E2                     
   345                           ;ledmain.c: 23:         }
   346   0006E2  4A0D               	infsnz	main@i_36^0,f,c
   347   0006E4  2A0E               	incf	(main@i_36+1)^0,f,c
   348   0006E6  BE0E               	btfsc	(main@i_36+1)^0,7,c
   349   0006E8  EF7F  F003         	goto	u61
   350   0006EC  500E               	movf	(main@i_36+1)^0,w,c
   351   0006EE  E109               	bnz	u60
   352   0006F0  0E08               	movlw	8
   353   0006F2  5C0D               	subwf	main@i_36^0,w,c
   354   0006F4  A0D8               	btfss	status,0,c
   355   0006F6  EF7F  F003         	goto	u61
   356   0006FA  EF81  F003         	goto	u60
   357   0006FE                     u61:
   358   0006FE  EF46  F003         	goto	l729
   359   000702                     u60:
   360   000702  EF04  F003         	goto	l707
   361   000706  EF00  F000         	goto	start
   362   00070A                     __end_of_main:
   363                           	callstack 0
   364                           
   365 ;; *************** function _intt_config *****************
   366 ;; Defined at:
   367 ;;		line 2 in file "ledmain.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;		None
   370 ;; Auto vars:     Size  Location     Type
   371 ;;		None
   372 ;; Return value:  Size  Location     Type
   373 ;;                  1    wreg      void 
   374 ;; Registers used:
   375 ;;		None
   376 ;; Tracked objects:
   377 ;;		On entry : 0/0
   378 ;;		On exit  : 0/0
   379 ;;		Unchanged: 0/0
   380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   381 ;;      Params:         0       0       0       0       0       0       0
   382 ;;      Locals:         0       0       0       0       0       0       0
   383 ;;      Temps:          0       0       0       0       0       0       0
   384 ;;      Totals:         0       0       0       0       0       0       0
   385 ;;Total ram usage:        0 bytes
   386 ;; Hardware stack levels used: 1
   387 ;; This function calls:
   388 ;;		Nothing
   389 ;; This function is called by:
   390 ;;		_main
   391 ;; This function uses a non-reentrant model
   392 ;;
   393                           
   394                           	psect	text1
   395   000734                     __ptext1:
   396                           	callstack 0
   397   000734                     _intt_config:
   398                           	callstack 30
   399   000734                     
   400                           ;ledmain.c: 4:     *trisb = 0x00;
   401   000734  6A93               	clrf	147,c
   402   000736  0012               	return		;funcret
   403   000738                     __end_of_intt_config:
   404                           	callstack 0
   405                           
   406                           	psect	smallconst
   407   000600                     __psmallconst:
   408                           	callstack 0
   409   000600  00                 	db	0
   410   000601  00                 	db	0	; dummy byte at the end
   411   000000                     __activetblptr  equ	0
   412                           
   413                           	psect	rparam
   414   000001                     ___rparam_used  equ	1
   415   000000                     ___param_bank   equ	0
   416   000000                     __Lparam        equ	__Lrparam
   417   000000                     __Hparam        equ	__Hrparam
   418                           
   419                           	psect	idloc
   420                           
   421                           ;Config register IDLOC0 @ 0x200000
   422                           ;	unspecified, using default values
   423   200000                     	org	2097152
   424   200000  FF                 	db	255
   425                           
   426                           ;Config register IDLOC1 @ 0x200001
   427                           ;	unspecified, using default values
   428   200001                     	org	2097153
   429   200001  FF                 	db	255
   430                           
   431                           ;Config register IDLOC2 @ 0x200002
   432                           ;	unspecified, using default values
   433   200002                     	org	2097154
   434   200002  FF                 	db	255
   435                           
   436                           ;Config register IDLOC3 @ 0x200003
   437                           ;	unspecified, using default values
   438   200003                     	org	2097155
   439   200003  FF                 	db	255
   440                           
   441                           ;Config register IDLOC4 @ 0x200004
   442                           ;	unspecified, using default values
   443   200004                     	org	2097156
   444   200004  FF                 	db	255
   445                           
   446                           ;Config register IDLOC5 @ 0x200005
   447                           ;	unspecified, using default values
   448   200005                     	org	2097157
   449   200005  FF                 	db	255
   450                           
   451                           ;Config register IDLOC6 @ 0x200006
   452                           ;	unspecified, using default values
   453   200006                     	org	2097158
   454   200006  FF                 	db	255
   455                           
   456                           ;Config register IDLOC7 @ 0x200007
   457                           ;	unspecified, using default values
   458   200007                     	org	2097159
   459   200007  FF                 	db	255
   460                           
   461                           	psect	config
   462                           
   463                           ; Padding undefined space
   464   300000                     	org	3145728
   465   300000  FF                 	db	255
   466                           
   467                           ;Config register CONFIG1H @ 0x300001
   468                           ;	unspecified, using default values
   469                           ;	Oscillator Selection bits
   470                           ;	OSC = 0x7, unprogrammed default
   471                           ;	Fail-Safe Clock Monitor Enable bit
   472                           ;	FCMEN = 0x0, unprogrammed default
   473                           ;	Internal/External Oscillator Switchover bit
   474                           ;	IESO = 0x0, unprogrammed default
   475   300001                     	org	3145729
   476   300001  07                 	db	7
   477                           
   478                           ;Config register CONFIG2L @ 0x300002
   479                           ;	unspecified, using default values
   480                           ;	Power-up Timer Enable bit
   481                           ;	PWRT = 0x1, unprogrammed default
   482                           ;	Brown-out Reset Enable bits
   483                           ;	BOREN = 0x3, unprogrammed default
   484                           ;	Brown-out Reset Voltage bits
   485                           ;	BORV = 0x3, unprogrammed default
   486   300002                     	org	3145730
   487   300002  1F                 	db	31
   488                           
   489                           ;Config register CONFIG2H @ 0x300003
   490                           ;	unspecified, using default values
   491                           ;	Watchdog Timer Enable bit
   492                           ;	WDT = 0x1, unprogrammed default
   493                           ;	Watchdog Timer Postscale Select bits
   494                           ;	WDTPS = 0xF, unprogrammed default
   495   300003                     	org	3145731
   496   300003  1F                 	db	31
   497                           
   498                           ; Padding undefined space
   499   300004                     	org	3145732
   500   300004  FF                 	db	255
   501                           
   502                           ;Config register CONFIG3H @ 0x300005
   503                           ;	unspecified, using default values
   504                           ;	PORTB A/D Enable bit
   505                           ;	PBADEN = 0x1, unprogrammed default
   506                           ;	Low-Power Timer 1 Oscillator Enable bit
   507                           ;	LPT1OSC = 0x0, unprogrammed default
   508                           ;	MCLR Pin Enable bit
   509                           ;	MCLRE = 0x1, unprogrammed default
   510   300005                     	org	3145733
   511   300005  82                 	db	130
   512                           
   513                           ;Config register CONFIG4L @ 0x300006
   514                           ;	unspecified, using default values
   515                           ;	Stack Full/Underflow Reset Enable bit
   516                           ;	STVREN = 0x1, unprogrammed default
   517                           ;	Single-Supply ICSP Enable bit
   518                           ;	LVP = 0x1, unprogrammed default
   519                           ;	Boot Block Size Select bit
   520                           ;	BBSIZ = 0x0, unprogrammed default
   521                           ;	Extended Instruction Set Enable bit
   522                           ;	XINST = 0x0, unprogrammed default
   523                           ;	Background Debugger Enable bit
   524                           ;	DEBUG = 0x1, unprogrammed default
   525   300006                     	org	3145734
   526   300006  85                 	db	133
   527                           
   528                           ; Padding undefined space
   529   300007                     	org	3145735
   530   300007  FF                 	db	255
   531                           
   532                           ;Config register CONFIG5L @ 0x300008
   533                           ;	unspecified, using default values
   534                           ;	Code Protection bit
   535                           ;	CP0 = 0x1, unprogrammed default
   536                           ;	Code Protection bit
   537                           ;	CP1 = 0x1, unprogrammed default
   538                           ;	Code Protection bit
   539                           ;	CP2 = 0x1, unprogrammed default
   540                           ;	Code Protection bit
   541                           ;	CP3 = 0x1, unprogrammed default
   542   300008                     	org	3145736
   543   300008  0F                 	db	15
   544                           
   545                           ;Config register CONFIG5H @ 0x300009
   546                           ;	unspecified, using default values
   547                           ;	Boot Block Code Protection bit
   548                           ;	CPB = 0x1, unprogrammed default
   549                           ;	Data EEPROM Code Protection bit
   550                           ;	CPD = 0x1, unprogrammed default
   551   300009                     	org	3145737
   552   300009  C0                 	db	192
   553                           
   554                           ;Config register CONFIG6L @ 0x30000A
   555                           ;	unspecified, using default values
   556                           ;	Write Protection bit
   557                           ;	WRT0 = 0x1, unprogrammed default
   558                           ;	Write Protection bit
   559                           ;	WRT1 = 0x1, unprogrammed default
   560                           ;	Write Protection bit
   561                           ;	WRT2 = 0x1, unprogrammed default
   562                           ;	Write Protection bit
   563                           ;	WRT3 = 0x1, unprogrammed default
   564   30000A                     	org	3145738
   565   30000A  0F                 	db	15
   566                           
   567                           ;Config register CONFIG6H @ 0x30000B
   568                           ;	unspecified, using default values
   569                           ;	Configuration Register Write Protection bit
   570                           ;	WRTC = 0x1, unprogrammed default
   571                           ;	Boot Block Write Protection bit
   572                           ;	WRTB = 0x1, unprogrammed default
   573                           ;	Data EEPROM Write Protection bit
   574                           ;	WRTD = 0x1, unprogrammed default
   575   30000B                     	org	3145739
   576   30000B  E0                 	db	224
   577                           
   578                           ;Config register CONFIG7L @ 0x30000C
   579                           ;	unspecified, using default values
   580                           ;	Table Read Protection bit
   581                           ;	EBTR0 = 0x1, unprogrammed default
   582                           ;	Table Read Protection bit
   583                           ;	EBTR1 = 0x1, unprogrammed default
   584                           ;	Table Read Protection bit
   585                           ;	EBTR2 = 0x1, unprogrammed default
   586                           ;	Table Read Protection bit
   587                           ;	EBTR3 = 0x1, unprogrammed default
   588   30000C                     	org	3145740
   589   30000C  0F                 	db	15
   590                           
   591                           ;Config register CONFIG7H @ 0x30000D
   592                           ;	unspecified, using default values
   593                           ;	Boot Block Table Read Protection bit
   594                           ;	EBTRB = 0x1, unprogrammed default
   595   30000D                     	org	3145741
   596   30000D  40                 	db	64
   597                           tosu	equ	0xFFF
   598                           tosh	equ	0xFFE
   599                           tosl	equ	0xFFD
   600                           stkptr	equ	0xFFC
   601                           pclatu	equ	0xFFB
   602                           pclath	equ	0xFFA
   603                           pcl	equ	0xFF9
   604                           tblptru	equ	0xFF8
   605                           tblptrh	equ	0xFF7
   606                           tblptrl	equ	0xFF6
   607                           tablat	equ	0xFF5
   608                           prodh	equ	0xFF4
   609                           prodl	equ	0xFF3
   610                           indf0	equ	0xFEF
   611                           postinc0	equ	0xFEE
   612                           postdec0	equ	0xFED
   613                           preinc0	equ	0xFEC
   614                           plusw0	equ	0xFEB
   615                           fsr0h	equ	0xFEA
   616                           fsr0l	equ	0xFE9
   617                           wreg	equ	0xFE8
   618                           indf1	equ	0xFE7
   619                           postinc1	equ	0xFE6
   620                           postdec1	equ	0xFE5
   621                           preinc1	equ	0xFE4
   622                           plusw1	equ	0xFE3
   623                           fsr1h	equ	0xFE2
   624                           fsr1l	equ	0xFE1
   625                           bsr	equ	0xFE0
   626                           indf2	equ	0xFDF
   627                           postinc2	equ	0xFDE
   628                           postdec2	equ	0xFDD
   629                           preinc2	equ	0xFDC
   630                           plusw2	equ	0xFDB
   631                           fsr2h	equ	0xFDA
   632                           fsr2l	equ	0xFD9
   633                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      18
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    portb	PTR unsigned char  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    trisb	PTR unsigned char  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0     120
                                              0 COMRAM    14    14      0
                        _intt_config
 ---------------------------------------------------------------------------------
 (1) _intt_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _intt_config

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1535      0       0      0.0%
BITBIGSFR          768      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     14      18     18.9%
STACK                0      0       0      0.0%
DATA                 0      0      18      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sat Dec 21 21:19:35 2024

                      l7 0736                       u10 0646                       u11 0642  
                     u30 0684                       u31 0680                       u40 06C2  
                     u24 0658                       u41 06BE                       u25 0654  
                     u60 0702                       u61 06FE                       u54 06D4  
                     u55 06D0                      l701 0734                      l703 0602  
                    l721 0668                      l713 0610                      l705 0606  
                    l731 069C                      l723 0684                      l715 0620  
                    l707 0608                      l733 06C2                      l717 0646  
                    l735 06E2                      l719 0664                      l737 06E6  
                    l729 068C              main@wait_37 0007                     _main 0602  
                   fsr1l 0FE1                     start 0000             ___param_bank 0000  
                  ?_main 0001                    _portb 0011                    main@i 000B  
                  _trisb 000F                    tablat 0FF5                    status 0FD8  
        __initialization 070A             ?_intt_config 0001             __end_of_main 070A  
                 ??_main 0001            __activetblptr 0000                   isa$std 0001  
           __pdataCOMRAM 000F             __mediumconst 0000                   tblptrh 0FF7  
                 tblptrl 0FF6                   tblptru 0FF8               __accesstop 0060  
__end_of__initialization 072A            ___rparam_used 0001           __pcstackCOMRAM 0001  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0600  
                __pcinit 070A                  __ramtop 0600                  __ptext0 0602  
                __ptext1 0734     end_of_initialization 072A                  postdec1 0FE5  
                postinc0 0FEE            __pidataCOMRAM 0730      start_initialization 070A  
          ??_intt_config 0001              __smallconst 0600      __end_of_intt_config 0738  
              copy_data0 071E                 __Hrparam 0000                 __Lrparam 0000  
               isa$xinst 0000              _intt_config 0734                 main@i_36 000D  
               main@wait 0003  
