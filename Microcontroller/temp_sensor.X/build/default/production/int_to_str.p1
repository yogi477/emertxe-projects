Version 4.0 HI-TECH Software Intermediate Code
"1 int_to_str.c
[; ;int_to_str.c: 1: void int_to_str(int num, char *str) {
[v _int_to_str `(v ~T0 @X0 1 ef2`i`*uc ]
{
[e :U _int_to_str ]
[v _num `i ~T0 @X0 1 r1 ]
[v _str `*uc ~T0 @X0 1 r2 ]
[f ]
"2
[; ;int_to_str.c: 2:     int i = 0, rem;
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[v _rem `i ~T0 @X0 1 a ]
"5
[; ;int_to_str.c: 5:     if (num < 0) {
[e $ ! < _num -> 0 `i 2  ]
{
"6
[; ;int_to_str.c: 6:         str[i++] = '-';
[e = *U + _str * -> ++ _i -> 1 `i `x -> -> # *U _str `i `x -> -> 45 `ui `uc ]
"7
[; ;int_to_str.c: 7:         num = -num;
[e = _num -U _num ]
"8
[; ;int_to_str.c: 8:     }
}
[e :U 2 ]
"11
[; ;int_to_str.c: 11:     int temp = num;
[v _temp `i ~T0 @X0 1 a ]
[e = _temp _num ]
"12
[; ;int_to_str.c: 12:     while (temp > 0) {
[e $U 3  ]
[e :U 4 ]
{
"13
[; ;int_to_str.c: 13:         temp /= 10;
[e =/ _temp -> 10 `i ]
"14
[; ;int_to_str.c: 14:         i++;
[e ++ _i -> 1 `i ]
"15
[; ;int_to_str.c: 15:     }
}
[e :U 3 ]
"12
[; ;int_to_str.c: 12:     while (temp > 0) {
[e $ > _temp -> 0 `i 4  ]
[e :U 5 ]
"17
[; ;int_to_str.c: 17:     str[i] = '\0';
[e = *U + _str * -> _i `x -> -> # *U _str `i `x -> -> 0 `ui `uc ]
"20
[; ;int_to_str.c: 20:     while (num > 0) {
[e $U 6  ]
[e :U 7 ]
{
"21
[; ;int_to_str.c: 21:         rem = num % 10;
[e = _rem % _num -> 10 `i ]
"22
[; ;int_to_str.c: 22:         str[--i] = rem + '0';
[e = *U + _str * -> =- _i -> 1 `i `x -> -> # *U _str `i `x -> + -> _rem `ui -> 48 `ui `uc ]
"23
[; ;int_to_str.c: 23:         num /= 10;
[e =/ _num -> 10 `i ]
"24
[; ;int_to_str.c: 24:     }
}
[e :U 6 ]
"20
[; ;int_to_str.c: 20:     while (num > 0) {
[e $ > _num -> 0 `i 7  ]
[e :U 8 ]
"25
[; ;int_to_str.c: 25: }
[e :UE 1 ]
}
